:host {
    overflow: hidden;
    /*To cope with long prop names*/
    display: block;
}

:host:not(:last-child) {
    margin-bottom: var(--space-3);
}

input[type=text], select {
    border-style: solid;
    border-color: grey;
    border-width: 1px;
}

input[type='text'] {
    padding-left: var(--space-3);
    padding-right: var(--space-4);
    /*To avoid text running over the 'x' (clear button)*/
}

input:hover, input:focus {
    outline-color: black;
    outline-width: 1px;
}

.name {
    float: left;
    width: var(--field-name-width);
    padding-right: var(--space-3);
}

.reference, .value, collectionDetails {
    width: var(--field-value-width);
    padding-left: var(--space-3);
    margin: var(--space-1);
    float: left;
}

input:not([type='checkbox']), textarea {
    width: var(--field-value-width);
    padding-right: var(--space-4);
}

input:not([type='checkbox']) {
    height: var(--field-value-height);
}

input[type='text'] {
    padding-left: var(--space-3);
}

.validation {
    display: block;
    color: var(--default-text-color);
}

/*MultiLine dialog*/

:host.multilinedialog, :host.multilinedialog .co-validation, .multilinedialog .buttons {
    display: inline-block;
    vertical-align: top;
}

:host.multilinedialog .name {
    display: none;
}

:host.multilinedialog .parameter {
    width: var(--field-value-width);
    /*To force (on IE) any validation message to be displayed underneath the field*/
}

:host.multilinedialog input:focus, :host.multilinedialog input:hover {
    outline-width: 1px;
    outline-color: blue;
}

:host.multilinedialog .input-control input:not([type='checkbox']), :host.multilinedialog select {
    height: var(--field-value-height);
    padding-top: var(--space-1);
}

:host.multilinedialog .validation {
    color: var(--default-text-color);
    margin-left: var(--space-3);
}

/* Drag and drop*/

.value.droppable {
    border: solid;
    border-width: 1px;
    width: var(--field-value-width);
    height: var(--field-value-height);
}

.value.droppable {
    border-color: black;
}

.value.droppable.dnd-drag-over.candrop {
    border-color: var(--approval-color);
    background-color: white;
    cursor: pointer;
}

.value.droppable.dnd-drag-over {
    border-color: var(--warning-color);
}

textarea {
    color: black;
}

.multiline {
    overflow: auto;
}

/* clear button on non-empty input field*/

.ng-clearable {
    background-image: var(--clearable-image);
    background-repeat: no-repeat;
    background-position: right -10px;
    background-size: 8px;
}

.ng-clearable[class*="link-color"] {
    background-image: var(--clearable-link-image);
}

.ng-clearable.ng-x {
    background-position: right 2px center;
}

.ng-clearable.ng-onX {
    cursor: pointer;
}

input::-ms-clear {
    display: none;
}

/* date fields*/

.input-control input.hasDatepicker, .input-control input.ui-timepicker-input {
    width: 217px;
}

.input-control input.hasDatepicker, .input-control input.ui-timepicker-input {
    width: 207px;
    float: left;
}

img.ui-datepicker-trigger {
    margin-left: var(--space-3);
    margin-top: var(--space-1);
    width: 20px;
}

img.ui-datepicker-trigger {
    background-color: var(--default-background-color);
}

select {
    width: var(--field-value-width);
    height: var(--field-value-height);
}

select[multiple] {
    height: 68px;
    /*Issue with IE if just inherit the default height*/
}

.validation {
    margin-left: 15var(--space-3);
    font-size: var(--font-size-2);
}

.suggestions {
    display: block;
    color: black;
    background-color: white;
    font-size: var(--font-size-1);
    width: var(--field-value-width);
    border-style: solid;
    border-width: 1px;
    border-color: black;
}

.suggestions ul {
    display: block;
    margin: 0px;
    padding: var(--space-3);
}

.suggestions ul:hover {
    color: white;
    background-color: Black;
}

.suggestions li {
    list-style-type: none;
}