1. Product_MenuFunctions.FindProductByName
- Minimal implementation of IContext, with only Instances method working
- Context to be automatically injected as a parameter.

2. Product_MenuFunctions.RandomProduct
- Implementation of Context.GetService<T>() 
- Registration of the RandomSeedGenerator service (currently in new NakedFunctions.Services project) as of type IRandomSeedGenerator. Service should be instantiated each time it is used, and using the zero param constructor.

3. Product_MenuFunctions.FindProductByNumber
- Recognition of returned tuple ([domaintype], IContext)
- Implementation of Context.WithOutput method.
- Implementation of IAlert service, resulting  in inclusion of user warnings/info in RO.

4. SpecialOffer_Functions.EditDescription
- Implementation of Context.WithPendingSave & PendingSave (see note on IContext).
- Use of this information to udate object(s).
- Edit methods for Discount, Type & Category should also then work

5. SpecialOffer_Functions.EditDates
- Registration of Clock (implementation of IClock) service, found in NakedFunctions.Service

6. SpecialOffer_Functions.AssociateWithProduct
- Should now work, but testing that Context.PendingSave can now also save new objects.
- ProductFunctions.AssociateWithSpecialOffer should then also work.

7. Sales_MenuFunctions.Menu
- Recognise NakedFramework.Menu.IMenu & IMenuFactory (in addition to NakedObjects versions) (& mark latter obsolete)


TO BE ADDED

Test each of the NakedFunctions attributes
Use of view model and editable view model
DisplayAsProperty
Inheritance?
Polymorphism (using role interface)
Editing & creation of instances through new UI features.
